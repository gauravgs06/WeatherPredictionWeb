{"version":3,"sources":["components/MainContent.jsx","components/Modal.jsx","components/PredictionModal.jsx","components/Window.jsx","components/Splash.jsx","WeatherApp.jsx","index.js","assets/lottie/images/cloud.png","assets/lottie/images/bg.png"],"names":["MainContent","real","this","props","data","Fragment","className","tempC","maxtempC","mintempC","pressure","precipMM","windspeedKmph","humidity","DewPointC","cloudcover","onClick","handleClick","Component","Modal","modalRoot","document","getElementById","element","createElement","classList","add","theme","appendChild","removeChild","ReactDOM","createPortal","children","PredictionModal","handleNext","setState","prevState","day","handlePrev","state","prediction","console","log","date","Date","setDate","getDate","getMonth","getFullYear","Math","round","handleClose","Window","modalShow","showModal","modalHide","modal","Splash","AppLoadingAnimation","assets","u","p","cloud","bg","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","width","height","WeatherApp","isLoading","axios","get","then","response","catch","error","hr","getHours","handleTheme","ui","render","module","exports"],"mappings":"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","file":"static/js/main.e1d82f39.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class MainContent extends Component {\r\n  render() {\r\n    const real = this.props.data;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-1\">\r\n          <div className=\"data\">\r\n            <label>Temperature</label>\r\n            <span>\r\n              {real.tempC} <sup>o</sup>C\r\n            </span>\r\n          </div>\r\n          <div className=\"data\">\r\n            <label>MaxTemp</label>\r\n            <span>\r\n              {real.maxtempC} <sup>o</sup>C\r\n            </span>\r\n          </div>\r\n          <div className=\"data\">\r\n            <label>MinTemp</label>\r\n            <span>\r\n              {real.mintempC} <sup>o</sup>C\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <div className=\"data\">\r\n            <label>Pressure</label>\r\n            <span>{real.pressure} atm</span>\r\n          </div>\r\n          <div className=\"data\">\r\n            <label>Precipitate</label>\r\n            <span>{real.precipMM} mm</span>\r\n          </div>\r\n          <div className=\"data\">\r\n            <label>Wind Speed</label>\r\n            <span>{real.windspeedKmph} kmph </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-3\">\r\n          <div className=\"data\">\r\n            <label>Humidity</label> <span>{real.humidity}%</span>\r\n          </div>\r\n          <div className=\"data\">\r\n            <label>Dew Point</label>\r\n            <span>\r\n              {real.DewPointC} <sup>o</sup>C\r\n            </span>\r\n          </div>\r\n          <div className=\"data\">\r\n            <label>Cloud Cover</label>\r\n            <span>{real.cloudcover}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"Button\" onClick={() => this.props.handleClick()}>\r\n          Show Predictions\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default class Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.modalRoot = document.getElementById(\"modal-root\");\r\n    this.element = document.createElement(\"div\");\r\n    this.element.classList.add(this.props.theme);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.modalRoot.appendChild(this.element);\r\n  }\r\n  componentWillUnmount() {\r\n    this.modalRoot.removeChild(this.element);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(this.props.children, this.element);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class PredictionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      day: 0\r\n    };\r\n  }\r\n  handleNext = () => {\r\n    this.setState(prevState => ({\r\n      day: prevState.day + 1\r\n    }));\r\n  };\r\n  handlePrev = () => {\r\n    this.setState(prevState => ({\r\n      day: prevState.day - 1\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const prediction = this.props.data[this.state.day];\r\n    console.log(prediction);\r\n    const date = new Date();\r\n    date.setDate(date.getDate() + this.state.day);\r\n    console.log(date);\r\n    return (\r\n      <div className=\"modal-container\">\r\n        <header className=\"Header\">\r\n          <div className=\"content\">\r\n            {/* <h1>What's to Come</h1> */}\r\n            <h1>{`${date.getDate()}-${date.getMonth()+1}-${date.getFullYear()}`}</h1>\r\n          </div>\r\n        </header>\r\n        <main className=\"body\">\r\n          <div className=\"body-container\">\r\n            <div className=\"col-1\">\r\n              <div className=\"data\">\r\n                <label>Temperature</label>\r\n                <span>\r\n                  {Math.round(prediction.tempC, 2)} <sup>o</sup>C\r\n                </span>\r\n              </div>\r\n              <div className=\"data\">\r\n                <label>MinTemp</label>\r\n                <span>\r\n                  {Math.round(prediction.mintempC, 2)} <sup>o</sup>C\r\n                </span>\r\n              </div>\r\n              <div className=\"data\">\r\n                <label>MaxTemp</label>\r\n                <span>\r\n                  {Math.round(prediction.maxtempC, 2)} <sup>o</sup>C\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <div className=\"data\">\r\n                <label>Pressure</label>\r\n                <span>{Math.round(prediction.pressure, 2)} atm</span>\r\n              </div>\r\n              <div className=\"data\">\r\n                <label>Humidity</label>\r\n                <span>{Math.round(prediction.humidity, 2)}%</span>\r\n              </div>\r\n              <div className=\"data\">\r\n                <label>DewPointC</label>\r\n                <span>\r\n                  {Math.round(prediction.DewPointC, 2)} <sup>o</sup>C\r\n                </span>\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"row-2\">We recommend {\"Temp\"}</div> */}\r\n          </div>\r\n        </main>\r\n        <footer className=\"footer\">\r\n          <div className=\"Button\" onClick={() => this.props.handleClose()}>\r\n            Close\r\n          </div>\r\n          <div\r\n            className=\"Button\"\r\n            onClick={() => (this.state.day === 0 ? null : this.handlePrev())}\r\n          >\r\n            Prev\r\n          </div>\r\n          <div\r\n            className=\"Button\"\r\n            onClick={() => (this.state.day === 2 ? null : this.handleNext())}\r\n          >\r\n            Next\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MainContent from \"./MainContent\";\r\nimport Modal from \"./Modal\";\r\nimport PredictionModal from \"./PredictionModal\";\r\n\r\nexport default class Window extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showModal: false\r\n    };\r\n  }\r\n\r\n  modalShow = () => {\r\n    this.setState({\r\n      showModal: true\r\n    });\r\n  };\r\n\r\n  modalHide = () => {\r\n    this.setState({\r\n      showModal: false\r\n    });\r\n  };\r\n  render() {\r\n    const { prediction, real } = this.props.data;\r\n    const modal = this.state.showModal ? (\r\n      <Modal theme={this.props.theme}>\r\n        <div className=\"modal\">\r\n          <PredictionModal data={prediction} handleClose={this.modalHide} />\r\n        </div>\r\n      </Modal>\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"GridContainer\">\r\n        <div className=\"TitleBarConatainer\"></div>\r\n        <div className=\"AnimationContainer\">\r\n          <div>ML Based Weather Prediction</div>\r\n          <div className=\"button-panel\">\r\n            <button className=\"Button\"></button>\r\n          </div>\r\n        </div>\r\n        <div className=\"ContentContainer\">\r\n          <div className=\"MainContent\">\r\n            <MainContent data={real} handleClick={this.modalShow} />\r\n          </div>\r\n        </div>\r\n        {modal}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport AppLoadingAnimation from \"../assets/lottie/splash.json\";\r\nimport cloud from \"../assets/lottie/images/cloud.png\";\r\nimport bg from \"../assets/lottie/images/bg.png\";\r\n\r\nexport default class Splash extends Component {\r\n  render() {\r\n    AppLoadingAnimation.assets[0].u = \"\";\r\n    AppLoadingAnimation.assets[0].p = cloud;\r\n    AppLoadingAnimation.assets[1].u = \"\";\r\n    AppLoadingAnimation.assets[1].p = bg;\r\n    const defaultOptions = {\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: AppLoadingAnimation,\r\n      rendererSettings: {\r\n        preserveAspectRatio: \"xMidYMid slice\"\r\n      }\r\n    };\r\n    return (\r\n      <React.Fragment>\r\n        <Lottie\r\n          options={defaultOptions}\r\n          width={600}\r\n          height={600}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Window from \"./components/Window\";\r\nimport Splash from \"./components/Splash\";\r\nimport axios from \"axios\";\r\n\r\nexport default class WeatherApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      data: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://weather-prediction-server.herokuapp.com/\")\r\n      .then(response => {\r\n        const data = response.data;\r\n        this.setState({\r\n          isLoading: false,\r\n          data: data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleTheme() {\r\n    const hr = new Date().getHours();\r\n    let theme;\r\n    if (hr >= 6 && hr <= 11) {\r\n      theme = \"morning\";\r\n    } else if (hr > 11 && hr < 16) {\r\n      theme = \"afternoon\";\r\n    } else if (hr >= 16 && hr < 19) {\r\n      theme = \"evening\";\r\n    } else {\r\n      theme = \"night\";\r\n    }\r\n    return theme + \"-theme\";\r\n  }\r\n  render() {\r\n    const theme = this.handleTheme();\r\n    const { isLoading } = this.state;\r\n    let ui = null;\r\n    if (isLoading) {\r\n      ui = (\r\n        <div>\r\n          <Splash />\r\n        </div>\r\n      );\r\n    } else {\r\n      ui = (\r\n        <div className={theme}>\r\n          <Window data={this.state.data} theme={theme} />\r\n        </div>\r\n      );\r\n    }\r\n    return <React.Fragment>{ui}</React.Fragment>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport WeatherApp from \"./WeatherApp\";\r\n\r\n// import \"./WeatherApp.css\"\r\nimport \"./assets/scss/WeatherApp.scss\"\r\n\r\nReactDOM.render(<WeatherApp />, document.getElementById(\"root\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/cloud.3f0a149f.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.a5fe3c5a.png\";"],"sourceRoot":""}